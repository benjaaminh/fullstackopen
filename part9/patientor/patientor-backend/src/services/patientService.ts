import patients from '../../data/patients';
import { Patient, PatientWithoutSSN, NewPatient, NewEntry, Entry } from '../types';
import { v1 as uuid } from 'uuid';

const getPatients = (): Patient[] => {
  return patients;
};

const getPatientsWithoutSSN = (): PatientWithoutSSN[] => {
  return patients.map(({ id, name, dateOfBirth, gender, occupation, entries }) => ({
    id,
    name,
    dateOfBirth,
    gender,
    occupation,
    entries
  }));
};

const addEntry = (
  entry: NewEntry,
  patient: Patient
): Entry => {
  const id = uuid();
  const newEntry={
    id:id,
    ...entry
  };
  patient.entries.push(newEntry);
  return newEntry;
  
};

const addPatient = (
  patient: NewPatient//patient consists of every field except id (newpatient type)
): Patient => {//return patient object
  const id = uuid();//id generated by uuid
  const newPatient = {
    id: id,
    ...patient
  };

  patients.push(newPatient);
  return newPatient;
};

const findById = (id: string): Patient | undefined => {
  const patient = patients.find(p => p.id === id);
  return patient;
};

export default {
  getPatients,
  getPatientsWithoutSSN,
  addPatient,
  findById,
  addEntry
};